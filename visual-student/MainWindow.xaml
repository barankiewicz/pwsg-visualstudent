<Window x:Class="visual_student.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:visual_student"
        mc:Ignorable="d"
        Title="Visual Student" Height="600" Width="800" MinWidth="500" MinHeight="500" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <CollectionViewSource Source="{Binding Plugins}" x:Key="source"/>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <HierarchicalDataTemplate DataType="{x:Type local:DirectoryItem}"
                                  ItemsSource="{Binding Items}">
            <TextBlock Text="{Binding Path=Name}" ToolTip="{Binding Path=Path}" />
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type local:FileItem}">
            <TextBlock Text="{Binding Path=Name}" ToolTip="{Binding Path=Path}" />
        </DataTemplate>

        <ControlTemplate x:Key="OpenedFileBodyTemplate">
            <RichTextBox>
                
            </RichTextBox>
        </ControlTemplate>

        <Style TargetType="TabItem" x:Key="AnimatedTabItem">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX"
                                                 To="1.2" Duration="0:0:0.5"></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX"
                                                  Duration="0:0:0.3"></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="errorMessageTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding Code, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Margin="7 0"/>
                <TextBlock Grid.Column="1" Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}" Margin="7 0"/>
                <TextBlock Grid.Column="2" Text="{Binding Line, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Margin="7 0"/>
            </Grid>
        </DataTemplate>
        

        <Style x:Key="errorListBoxStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="IndianRed"/>
            <Setter Property="ContentTemplate" Value="{StaticResource errorMessageTemplate}" />

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="PaleVioletRed" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="IndianRed" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="PaleVioletRed" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="IndianRed" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="OpenCommandBinding_Executed"></CommandBinding>
        <CommandBinding Command="Save" Executed="SaveCommandBinding_Executed"></CommandBinding>
        <CommandBinding Command="New" Executed="NewCommandBinding_Executed"></CommandBinding>
        <CommandBinding Command="Select" Executed="ExecuteCommandBinding_Executed"></CommandBinding>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="Open"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control" Command="Save"></KeyBinding>
        <KeyBinding Key="N" Modifiers="Control" Command="New"></KeyBinding>
        <KeyBinding Key="F5" Command="Select"></KeyBinding>
    </Window.InputBindings>
    
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="New" Command="New" InputGestureText="Ctrl+N" />
                    <MenuItem Header="Save" x:Name="saveButton" Command="Save" InputGestureText="Ctrl+S"/>
                    <MenuItem Header="Save As..." x:Name="saveAsButton" Click="saveAsButton_Click"/>
                    <MenuItem Header="Open File" Command="Open" InputGestureText="Ctrl+O"/>
                    <MenuItem Header="Open Project" Click="MenuItem_Click_4" />
                    <Separator />
                    <MenuItem Header="Exit" Click="MenuItem_Click_1" />
                </MenuItem>
                <MenuItem Header="Plugins" ItemsSource="{Binding Plugins}">
                    <MenuItem.ItemContainerStyle>
                        <Style>
                            <Setter Property="MenuItem.Header" Value="DUperka" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="About" Click="MenuItem_Click"/>
            </Menu>
        </DockPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <ComboBox Grid.Column="0" Margin ="0 0 " SelectedIndex="0" VerticalAlignment="Center" x:Name="chooseComboBox">
                <ComboBoxItem Content="Build"/>
                <ComboBoxItem Content="Build + Run"/>
            </ComboBox>
            <Button Grid.Column="1" Margin="6 6" Content="Execute" Command="Select"/>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" MinWidth="150"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="200" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <TabControl Grid.Row="0" x:Name="openFiles" ItemsSource="{Binding OpenedFiles, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay}" SelectedItem="{Binding SelectedTab, Mode=TwoWay}">
                    <TabControl.ItemTemplate>
                         <!--this is the header template-->
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="3"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="1" Text="*" Visibility="{Binding Modified, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}}" VerticalAlignment="Center"/>
                                <Button Grid.Column="2" Content="X" VerticalAlignment="Center" Margin="3 0" Click="Button_Click" />
                            </Grid>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <RichTextBox VerticalScrollBarVisibility="Auto" PreviewTextInput="RichTextBox_PreviewTextInput">
                                <FlowDocument FontSize="12" FontFamily="Monaco">
                                    <Paragraph Margin="0">
                                        <Run Text="{Binding Body, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
                <TabControl Grid.Row="1" x:Name="consoleControl" Margin="0 3" TabStripPlacement="Bottom" ItemContainerStyle="{StaticResource AnimatedTabItem}">
                    <TabItem Header="Output" Foreground="DarkBlue" x:Name="ConsoleMessagesTabItem">
                        <TextBox Text="{Binding ConsoleMessages}" x:Name="ConsoleMessagesTextBlock" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" TextWrapping="Wrap"/>
                    </TabItem>
                    <TabItem Header="Error List" Foreground="Red" x:Name="ErrorMessagesTabItem">
                        <ListBox ItemsSource="{Binding ErrorMessages, UpdateSourceTrigger=PropertyChanged}" ItemContainerStyle="{StaticResource errorListBoxStyle}" x:Name="errorListBox" ScrollViewer.HorizontalScrollBarVisibility="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        </ListBox>
                    </TabItem>
                </TabControl>
            </Grid>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
            <TreeView Grid.Column="2" x:Name="fileTree" ItemsSource="{Binding}" MouseDoubleClick="fileTree_MouseDoubleClick"/>
        </Grid>

    </Grid>
</Window>
